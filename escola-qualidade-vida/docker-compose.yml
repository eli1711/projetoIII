version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: escola_db
    ports:
      - "3307:3306" 
    volumes:
      - ./db_data:/var/lib/mysql  # Persistindo os dados em db_data no host
    networks:
      - rede-interna
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: ./backend  # Caminho correto para o backend
      dockerfile: Dockerfile  # Certifique-se de que o Dockerfile esteja na pasta backend
    container_name: escola-backend
    restart: always
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: escola_db
      DB_USER: root
      DB_PASSWORD: password
      SECRET_KEY: uma_chave_super_secreta_32_caracteres_no_minimo
    ports:
      - "5000:5000"  # A porta 5000 do contêiner será mapeada para a porta 5000 no host
    depends_on:
      - mysql  # O backend depende do banco de dados MySQL
    networks:
      - rede-interna
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    build:
      context: ./frontend  # Caminho correto para o frontend
      dockerfile: Dockerfile  # Dockerfile do Nginx para o frontend
    container_name: nginx
    restart: always
    ports:
      - "8080:80"  # A porta 808 será mapeada para o frontend (nginx)
    depends_on:
      - backend  # O nginx depende do backend
    volumes:
      - ./frontend/public:/usr/share/nginx/html  # Serve os arquivos estáticos do frontend
    networks:
      - rede-interna
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  rede-interna:
    driver: bridge  # Garantindo que todos os contêineres estão na mesma rede interna
